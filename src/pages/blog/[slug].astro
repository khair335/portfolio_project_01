---
import { CollectionEntry, getCollection } from 'astro:content';
import '../../styles/global.css';
import { Image } from 'astro:assets';
import Navbar from '../../component/Navbar.astro';
import Footer from '../../component/Footer.astro';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;

const { Content } = await post.render();


const { title,pubDate, views, pubTime,authorImg, readTime, author, image } = post.data;
console.log("image",authorImg);

const formatViewCount = (view) => {
  if (views >= 1000) {
    return `${(views / 1000).toFixed(1)}K`;
  }
  return views;
};

// Function to format the post time
const formatPostTime = (time) => {
  if (pubTime >= 60) {
    const hours = (pubTime / 60).toFixed(2);
    return `${hours} h`;
  }
  return `${pubTime} min`;
};
---
<html>
  <head>
    <title>{title}</title>

  </head>
  <body class='mx-auto bg-stone-950 w-full'>
    <div class='bg-stone-950 px-4 md:px-12 flex justify-center items-center w-full '>
      <section class='max-w-[673px] lg:max-w-[928px] xxl:max-w-[1344px] w-full mx-auto relative'>
        <div class='top-bg-section pb-12 relative z-10'>
          <!-- Navbar Component -->
          <Navbar />

          <!-- Banner Section -->
          <div style={{ backgroundImage: `url(${image.src.src})` }} class='blogBanner bg-no-repeat bg-cover py-10 md:py-20 my-10 rounded-lg relative z-10 flex justify-center items-center'>
           <!-- <Image src={image.src} alt={authorImg.alt}  class='absolute top-0 bottom-0 left-0 right-0 ' /> -->
            <div class='max-w-[1000px] w-full px-10'>
              <p class='font-craftworkGrotesk text-white text-lg lg:text-3xl font-bold pb-5'>Article</p>
              <h1 id="blog-title" class='text-white text-3xl lg:text-7xl font-generalSans text-left font-medium'>{title}</h1>
              <div class='flex mt-10 items-center gap-3'>
                <div>
                  <Image src={authorImg.src} alt={authorImg.alt} width={34} height={34} class='max-w-9 w-full h-9 rounded-full border-2 border-white' />
                </div>
                <div>
                  <a class='font-plusJakartaSans text-white text-lg hover:underline' href=''>{author}</a>
                  <div class='flex gap-2 text-xs text-white font-plusJakartaSans'>
                    <p> {new Date(pubDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' })}</p>
                    <p><span class='pr-2'>-</span> {formatPostTime(pubTime)} read</p>
                    <p><span class='pr-2'>-</span> {formatViewCount(views)} view</p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Main Content Grid -->
          <div class='grid grid-cols-12 relative z-10 px-4'>
            <!-- Markdown Content -->
            <div class='col-span-12 md:col-span-9 pr-0 md:pr-10 mb-20'>
              <div class="markdown-container">
                <!-- <slot /> -->
              	<Content />
              </div>
            </div>

            <!-- Sidebar Navigation -->
            <div class='col-span-3 sidebar mt-6 w-full sticky top-[50px] hidden md:block h-max'>
              <nav class='flex flex-col'>
                <!-- Dynamically Generated Links -->
              </nav>
            </div>
          </div>

          <!-- Footer Component -->
          <Footer />
        </div>
      </section>
    </div>

    <!-- JavaScript for Navigation and Copy Buttons -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const sections = document.querySelectorAll('h2[id]');
        const navContainer = document.querySelector('.sidebar nav');

        sections.forEach((section) => {
          const link = document.createElement('a');
          link.href = `#${section.id}`;
          link.className = 'text-lg lg:text-xl font-generalSans hover:text-blue-400';
          link.textContent = section.textContent;
          navContainer.appendChild(link);
        });

        const navLinks = document.querySelectorAll('.sidebar nav a');

        window.addEventListener('scroll', () => {
          let current = '';
          sections.forEach((section) => {
            const sectionTop = section.offsetTop - 150;
            if (pageYOffset >= sectionTop) {
              current = section.getAttribute('id');
            }
          });

          navLinks.forEach((link) => {
            if (link.getAttribute('href').includes(current)) {
              link.classList.add('active');
              link.classList.remove('text-white');
              link.classList.add('text-red-500');
            } else {
              link.classList.remove('active');
              link.classList.add('text-white');
              link.classList.remove('text-red-500');
            }
          });
        });

        const codeBlocks = document.querySelectorAll('pre');

        codeBlocks.forEach((codeBlock) => {
          const copyButton = document.createElement('button');
          copyButton.className = 'copy-button';
          copyButton.textContent = 'Copy';
          copyButton.addEventListener('click', () => {
            const codeText = codeBlock.querySelector('code').textContent;
            copyToClipboard(codeText, copyButton);
          });

          codeBlock.appendChild(copyButton);

          // Hide copy button initially
          copyButton.style.display = 'none';

          codeBlock.addEventListener('mouseenter', () => {
            copyButton.style.display = 'block';
          });

          codeBlock.addEventListener('mouseleave', () => {
            copyButton.style.display = 'none';
          });
        });
      });

      function copyToClipboard(text, button) {
        navigator.clipboard.writeText(text).then(
          function () {
            button.textContent = 'Copied!';
            setTimeout(function () {
              button.textContent = 'Copy';
            }, 2000); // Reset button text after 2 seconds
          },
          function (err) {

          }
        );
      }
    </script>
  </body>
</html>

