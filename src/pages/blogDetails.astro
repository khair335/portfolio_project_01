---
import project1 from '../assets/project1.jpeg';
import project2 from '../assets/project2.jpeg';
import '../styles/global.css';
import { Image } from 'astro:assets';
import Navbar from '../conponent/Navbar.astro';
import Footer from '../conponent/Footer.astro';
import MarkdownContent from '../content/vmware-homelab-automation-with-vagrant.mdx';
const { lang, version } = Astro.params;
console.log("version",lang,version);

---

<astro>
  <html lang='en'>
    <head>
      <meta charset='utf-8' />
      <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
      <meta name='viewport' content='width=device-width' />
      <meta name='generator' content={Astro.generator} />
      <title>Blog</title>

      <style>
        html {
          scroll-behavior: smooth;
        }

        .blogBanner {
          background-image: url('../assets/project1.jpeg');
          background-position: center;
          background-repeat: no-repeat;
          background-size: cover;
        }

        /* global.css */

        .code-block {
          position: relative;
          background-color: #1f2937;
          border-radius: 8px;
          padding: 1rem;
          overflow: hidden;
        }

        .copy-button {
          position: absolute;
          top: 10px;
          right: 10px;
          background-color: #4a4a4a;
          color: white;
          border: none;
          border-radius: 5px;
          padding: 5px 10px;
          cursor: pointer;
          display: none;
        }

        .code-block:hover .copy-button {
          display: block;
        }

        .active {
          color: #ef4444; /* red-500 */
          font-weight: bold;
        }

        /* Sticky sidebar */
        .sidebar {
          max-height: 100vh;
          overflow-y: auto;
        }
        code {
          max-width: 350px;
          width: 100%;
          word-break: break-all;
          word-wrap: break-word;
        }
        pre {
          display: inline-block;
          white-space: normal;
          max-width: 100%;
          word-break: break-all;
          word-wrap: break-word;
        }
        ul {
          margin-bottom: 20px;
        }
      </style>
    </head>
    <body class='mx-auto bg-stone-950 w-full'>
      <div
        class='bg-stone-950 px-4 md:px-12 flex justify-center items-center w-full '
      >
        <section
          class='max-w-[673px] lg:max-w-[928px] xxl:max-w-[1344px] w-full mx-auto relative'
        >
          <div class='top-bg-section pb-12 relative z-10'>
            <Navbar />

            <div
              class='blogBanner py-10 md:py-20 my-10 rounded-lg relative z-10 flex justify-center items-center'
            >
              <div class='max-w-[1000px] w-full px-10'>
                <p
                  class='font-craftworkGrotesk text-white text-lg lg:text-3xl font-bold pb-5'
                >
                  Article
                </p>
                <h1
                id="blog-title"
                  class='text-white text-3xl lg:text-7xl font-generalSans text-left font-medium'
                >
                  Automating your VMware Homelab with Vagrant
                </h1>
                <div class='flex mt-10 items-center gap-3'>
                  <div class=''>
                    <Image
                      src={project2}
                      alt='hero image'
                      width={34}
                      height={34}
                      class='max-w-9 w-full h-9 rounded-full border-2 border-white'
                    />
                  </div>
                  <div>
                    <a
                      class='font-plusJakartaSans text-white text-lg hover:underline'
                      href=''>Kaladin Brightlord</a
                    >
                    <div
                      class='flex gap-2 text-xs text-white font-plusJakartaSans'
                    >
                      <p>01 May 2022</p>
                      <p><span class='pr-2'>-</span> 4 min read</p>
                      <p><span class='pr-2'>-</span> 500 view</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class='grid grid-cols-12 relative z-10 px-4'>
              <div class='col-span-12 md:col-span-9 pr-0 md:pr-10'>
                <div class='pb-10'>
                  <h2
                    id='introduction'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk'
                  >
                    Introduction_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    In this blog post, I'll share my experience setting up a
                    VMware homelab using Vagrant for automation. This approach
                    allows for quick and easy deployment of virtual machines,
                    making it ideal for testing and development environments.
                  </p>
                </div>
                <div class='pb-10'>
                  <h2
                    id='prerequisites'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk'
                  >
                    Prerequisites_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    Before getting started, ensure you have the following:
                  </p>
                  <ul class='text-white text-lg list-disc pl-14'>
                    <li>VMware Workstation or Fusion</li>
                    <li>Vagrant</li>
                    <li>vagrant-vmware-desktop plugin</li>
                  </ul>
                </div>
                <div class='pb-10'>
                  <h2
                    id='setup'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk'
                  >
                    Setting Up Vagrant_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    Before getting started, ensure you have the following:
                  </p>
                  <ul class='text-white text-lg list-decimal pl-14'>
                    <li>Install Vagrant from the official website</li>
                    <li>Install the vagrant-vmware-desktop plugin:</li>
                    <li>
                      Obtain a license for the plugin (free for personal use)
                    </li>
                  </ul>
                  <div class='code-block'>
                    <button
                      class='copy-button'
                      data-copy-text="vagrant plugin install vagrant-vmware-desktop"

                      >Copy</button
                    >
                    <pre
                      class='bg-gray-800 text-white px-4 my-4 rounded'>
                      <code>
vagrant plugin install vagrant-vmware-desktop
                      </code>
                    </pre>
                  </div>
                </div>
                <div class='pb-10'>
                  <h2
                    id='vagrantfile'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk'
                  >
                    Creating a Vagrantfile_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    Create a file named <code>Vagrantfile</code> in your project
                    directory with the following content:
                  </p>
                  <div class='code-block'>
                    <button
                      class='copy-button'
                      data-copy-text=`Vagrant.configure("2") do |config| config.vm.box = "generic/ubuntu2004" config.vm.provider "vmware_desktop" do |v| v.vmx["memsize"] = "1024" v.vmx["numvcpus"] = "2" end end`

                      >Copy</button
                    >
                    <pre
                      class='bg-gray-800 text-white px-4 my-4 rounded'>
                      <code>
Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2004"
  config.vm.provider "vmware_desktop" do |v|
    v.vmx["memsize"] = "1024"
    v.vmx["numvcpus"] = "2"
  end
end
                      </code>
                    </pre>
                  </div>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    This configuration specifies:
                  </p>
                  <ul class='text-white text-lg list-disc pl-10'>
                    <li>Ubuntu 20.04 as the base image</li>
                    <li>1024 MB of RAM</li>
                    <li>2 CPU cores</li>
                  </ul>
                </div>
                <div class='pb-10'>
                  <h2
                    id='launching-vm'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk mt-10'
                  >
                    Launching the VM_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    To start the virtual machine, run:
                  </p>
                  <div class='code-block'>
                    <button
                      class='copy-button'
                      data-copy-text=`vagrant up`
                      >Copy</button
                    >
                    <pre
                      class='bg-gray-800 text-white p-4 rounded'>
                      <code>
vagrant up
                      </code>
                    </pre>
                  </div>
                </div>
                <div class='pb-10'>
                  <h2
                    id='accessing-vm'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk mt-10'
                  >
                    Accessing the VM_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    SSH into the VM using:
                  </p>
                  <div class='code-block'>
                    <button
                      class='copy-button'
                      data-copy-text=`vagrant ssh`
                      >Copy</button
                    >
                    <pre
                      class='bg-gray-800 text-white p-4 rounded'>
                      <code>
vagrant ssh
                      </code>
                    </pre>
                  </div>
                </div>
                <div class='pb-10'>
                  <h2
                    id='customizing-vm'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk mt-10'
                  >
                    Customizing the VM_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    You can further customize the VM by modifying the
                    Vagrantfile. For example, to add a second network interface:
                  </p>
                  <div class='code-block'>
                    <button
                      class='copy-button'
                      data-copy-text=`config.vm.network 'private_network', ip: '192.168.33.10'`

                      >Copy</button
                    >
                    <pre
                      class='bg-gray-800 text-white p-4 rounded'>
                      <code>
config.vm.network "private_network", ip: "192.168.33.10"
                      </code>
                    </pre>
                  </div>
                </div>
                <div class='pb-10'>
                  <h2
                    id='provisioning'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk mt-10'
                  >
                    Provisioning_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    Vagrant supports various provisioning methods. Here's an
                    example using a shell script:
                  </p>
                  <div class='code-block'>
                    <button
                      class='copy-button'
                      data-copy-text=`config.vm.provision 'shell', inline: <<-SHELL apt-get update apt-get install -y nginx SHELL)"`

                      >Copy</button
                    >
                    <pre
                      class='bg-gray-800 text-white p-4 rounded'>
                      <code>
config.vm.provision "shell", inline: -SHELL
  apt-get update
  apt-get install -y nginx
SHELL
                      </code>
                    </pre>
                  </div>
                </div>
                <div class='pb-10'>
                  <h2
                    id='conclusion'
                    class='text-3xl lg:text-5xl text-white font-craftworkGrotesk mt-10'
                  >
                    Conclusion_
                  </h2>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    Using Vagrant with VMware provides a powerful and flexible
                    way to manage your homelab environment. It allows for easy
                    creation, destruction, and recreation of VMs, making it
                    ideal for testing and development purposes.
                  </p>
                  <p
                    class='py-6 text-white text-lg lg:text-xl font-plusJakartaSans'
                  >
                    Citations:
                    <a
                      href='https://kaladin.dev/blog/vmware-homelab-automation-with-vagrant/'
                      class='text-blue-400 underline'
                    >
                      [1]
                      https://kaladin.dev/blog/vmware-homelab-automation-with-vagrant/
                    </a>
                  </p>
                </div>
              </div>

              <div
                class='col-span-3 sidebar w-full sticky top-[50px] hidden md:block h-max'
              >
                <nav class='flex flex-col'>
                  <a
                    href='#introduction'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Introduction</a
                  >
                  <a
                    href='#prerequisites'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Prerequisites</a
                  >
                  <a
                    href='#setup'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Setting Up Vagrant</a
                  >
                  <a
                    href='#vagrantfile'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Creating a Vagrantfile</a
                  >
                  <a
                    href='#launching-vm'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Launching the VM</a
                  >
                  <a
                    href='#accessing-vm'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Accessing the VM</a
                  >
                  <a
                    href='#customizing-vm'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Customizing the VM</a
                  >
                  <a
                    href='#provisioning'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Provisioning</a
                  >
                  <a
                    href='#conclusion'
                    class='text-white text-lg lg:text-xl font-generalSans hover:text-blue-400'
                    >Conclusion</a
                  >
                </nav>
              </div>
            </div>

            <Footer />
          </div>
        </section>
      </div>

      <script>
const blogData = Array.from({ length: 30 }, (_, index) => ({
  id: index + 1,
  title: `Blog Post Title ${index + 1}`,
  description: `This is the description for Blog Post Title ${index + 1}.`,
  view: Math.floor(Math.random() * 2000) + 1,
  postTime: Math.floor(Math.random() * 100) + 1,
}));

          const urlParams = new URLSearchParams(window.location.search);
        const blogId = urlParams.get('id');
        const blog = blogData.find((blog) => blog.id  == blogId );

      if (blog) {
        console.log(blog);
        document.getElementById('blog-title').textContent = blog.title;
      } else {
        console.log('Blog post not found');
      }



        document.addEventListener('DOMContentLoaded', () => {
          const sections = document.querySelectorAll('h2[id]');
          const navLinks = document.querySelectorAll('.sidebar nav a');

          window.addEventListener('scroll', () => {
            let current = '';
            sections.forEach((section) => {
              const sectionTop = section.offsetTop - 150;
              if (pageYOffset >= sectionTop) {
                current = section.getAttribute('id');
              }
            });

            navLinks.forEach((link) => {
              link.classList.remove('active');
              if (link.getAttribute('href').includes(current)) {
                link.classList.add('active');
              }
            });
          });
        });
      </script>

      <script>
  function copyToClipboard(text, button) {
    navigator.clipboard.writeText(text).then(
      function() {
        button.textContent = 'Copied!';
        setTimeout(function() {
          button.textContent = 'Copy';
        }, 2000); // Reset button text after 2 seconds
      },
      function(err) {
        console.error('Could not copy text: ', err);
      }
    );
  }

  document.addEventListener('DOMContentLoaded', () => {
    const copyButtons = document.querySelectorAll('.copy-button');
    copyButtons.forEach((button) => {
      button.addEventListener('click', () => {
        const textToCopy = button.getAttribute('data-copy-text');
        copyToClipboard(textToCopy, button);
      });
    });
  });
</script>

    </body>
  </html>
</astro>
