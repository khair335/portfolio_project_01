---
const { text, dataValue, className, style } = Astro.props;
const uniqueId = `animated-text-${Math.random().toString(36).substr(2, 9)}`; // Generate a unique ID
---

<head>
  <!-- JavaScript for interactive h1 -->
  <script>
    const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    let intervals = {}; // Store intervals for each unique ID

    function animateText(event) {
      const id = event.target.id;
      let iteration = 0;
      clearInterval(intervals[id]);

      intervals[id] = setInterval(() => {
        event.target.innerText = event.target.innerText
          .split("")
          .map((letter, index) => {
            if (index < iteration) {
              return event.target.dataset.value[index];
            }
            return letters[Math.floor(Math.random() * 26)];
          })
          .join("");

        if (iteration >= event.target.dataset.value.length) {
          clearInterval(intervals[id]);
        }

        iteration += 1 / 3;
      }, 30);
    }

    function checkAndAnimateText(id) {
      const h1 = document.getElementById(id);
      const rect = h1.getBoundingClientRect();
      if (rect.top < window.innerHeight && rect.bottom >= 0 && !h1.dataset.animated) {
        animateText({ target: h1 });
        h1.dataset.animated = true; // Mark the element as animated
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      document.querySelectorAll('h1[data-value]').forEach(h1 => {
        checkAndAnimateText(h1.id); // Check and animate text on initial load
      });
    });

    document.addEventListener("scroll", () => {
      document.querySelectorAll('h1[data-value]').forEach(h1 => {
        checkAndAnimateText(h1.id); // Check and animate text on scroll
      });
    });
  </script>
</head>
<body>
  <h1 id={uniqueId} class={className} style={style} data-value={dataValue}>{text}</h1>
</body>
