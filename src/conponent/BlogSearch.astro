---
import { useState } from 'astro/hooks';
import BlogCard from '../../conponent/BlogCard.astro';
import IconCollection from '../../IconCollection/IconCollection.astro';

const postsPerPage = 6;

const BlogSearch = ({ blogPosts }) => {
  const [filteredBlogData, setFilteredBlogData] = useState(blogPosts);
  const [currentPage, setCurrentPage] = useState(1);

  const totalPages = Math.ceil(filteredBlogData.length / postsPerPage);

  const handleSearch = (event) => {
    const query = event.target.value.toLowerCase();
    const filteredData = blogPosts.filter(post => post.data.title.toLowerCase().includes(query));
    setFilteredBlogData(filteredData);
    setCurrentPage(1);
  };

  const handlePrevPage = () => {
    if (currentPage > 1) {
      setCurrentPage(currentPage - 1);
    }
  };

  const handleNextPage = () => {
    if (currentPage < totalPages) {
      setCurrentPage(currentPage + 1);
    }
  };

  const paginatedData = filteredBlogData.slice((currentPage - 1) * postsPerPage, currentPage * postsPerPage);

  return (
    <>
      <div class="flex items-center max-w-full md:max-w-[432px] relative z-10 mb-6 justify-between w-full bg-white/5 group hover:bg-blue-500/10 border border-white/20 rounded-full p-1 shadow-lg">
        <div class="flex items-center pl-4 pr-2">
          <IconCollection icon="searchIcon" class="w-6 h-6" />
          <input
            type="text"
            placeholder="Search by name"
            class="bg-transparent border-none text-white placeholder-gray-400 focus:outline-none ml-2 w-full max-w-[220px]"
            onInput={handleSearch}
          />
        </div>
        <button
          class="text-white max-w-[88px] w-full h-[45px] flex justify-center items-center text-lg font-normal font-generalSans bg-[#162149] group-hover:bg-blue-800 rounded-full mr-1"
        >
          Search
        </button>
      </div>
      <div id="blog-cards" class="flex flex-wrap gap-8 mb-20 relative z-10">
        {paginatedData.map((post) => (
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            views={post.data.views}
            pubTime={new Date(post.data.pubTime).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' })}
            href={`/blog/${post.slug}`}
          />
        ))}
      </div>
      <div class="flex justify-center items-center space-x-4 text-white pb-24">
        <button
          class="w-12 h-12 flex justify-center items-center rounded-full bg-white/20 hover:bg-white group"
          onClick={handlePrevPage}
          disabled={currentPage === 1}
        >
          <IconCollection
            icon="arrowLeft"
            class="w-9 h-9 fill-black group-hover:fill-white"
          />
        </button>
        <div class="flex items-center space-x-2">
          <div>{currentPage}</div>
          <div>of</div>
          <div>{totalPages}</div>
        </div>
        <button
          class="w-12 h-12 flex justify-center items-center rounded-full bg-white/20 hover:bg-white group"
          onClick={handleNextPage}
          disabled={currentPage === totalPages}
        >
          <IconCollection
            icon="arrowRight2"
            class="w-9 h-9 fill-black group-hover:fill-white"
          />
        </button>
      </div>
    </>
  );
};

export default BlogSearch;
---

<BlogSearch blogPosts={Astro.props.blogPosts} />
